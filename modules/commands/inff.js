const { EmbedBuilder } = require('discord.js');
const fetch = require('node-fetch');

module.exports = {
    name: 'inff',
    description: 'L·∫•y th√¥ng tin t√†i kho·∫£n Free Fire',
    usage: 'inff <UID>',
    cooldown: 5,

    async execute(client, message, args) {
        if (!args[0]) return message.reply('Nh·∫≠p UID v√†o m√†y ∆°i!');

        const uid = args[0];
        const url = `https://accinfo.vercel.app/player-info?region=SG&uid=${uid}`;

        try {
            const res = await fetch(url);
            if (!res.ok) throw new Error('API l·ªói ho·∫∑c UID kh√¥ng t·ªìn t·∫°i');

            const data = await res.json();
            const basic = data.basicInfo;
            const clan = data.clanBasicInfo || {};
            const credit = data.creditScoreInfo || {};

            const embed = new EmbedBuilder()
                .setColor('#f1c40f')
                .setTitle(`üîç Th√¥ng tin ng∆∞·ªùi ch∆°i: ${basic.nickname || 'Kh√¥ng t√™n'}`)
                .addFields(
                    { name: 'UID', value: basic.accountId, inline: true },
                    { name: 'Region', value: basic.region || 'N/A', inline: true },
                    { name: 'Level', value: `${basic.level}`, inline: true },
                    { name: 'Rank', value: `${basic.rank}`, inline: true },
                    { name: 'CS Rank', value: `${basic.csRank}`, inline: true },
                    { name: 'Credit Score', value: `${credit.creditScore || 'Kh√¥ng r√µ'}`, inline: true },
                    { name: 'Clan', value: clan.clanName || 'Kh√¥ng c√≥', inline: true },
                    { name: 'S·ªë like', value: `${basic.liked}`, inline: true },
                    { name: 'Season', value: `${basic.seasonId}`, inline: true },
                    { name: 'Exp', value: `${basic.exp}`, inline: true },
                    { name: 'Phi√™n b·∫£n', value: basic.releaseVersion || 'N/A', inline: true },
                    { name: 'Ng√†y t·∫°o acc', value: `<t:${Math.floor(parseInt(basic.createAt))}:F>`, inline: false },
                    { name: 'Online l·∫ßn cu·ªëi', value: `<t:${Math.floor(parseInt(basic.lastLoginAt))}:R>`, inline: true }
                )
                .setFooter({ text: `Y√™u c·∫ßu b·ªüi ${message.author.tag}`, iconURL: message.author.displayAvatarURL() })
                .setTimestamp();

            message.channel.send({ embeds: [embed] });

        } catch (err) {
            console.error(err);
            message.reply('L·∫•y th√¥ng tin l·ªói. UID sai ho·∫∑c server API toang.');
        }
    }
};
